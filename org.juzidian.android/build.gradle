apply plugin: 'android'

def rawResDir = "res/raw"

def dictionaryDbPath = "$rawResDir/juzidian_dictionary.db"

def cedictDataPath = "${project(':org.juzidian.core').projectDir}/build/main/resources/cedict-data.txt"

configurations {
	generate
}

dependencies {
	compile files("${ant['sdk.dir']}/extras/android/support/v4/android-support-v4.jar")
	compile project(':org.juzidian.core')
	compile 'com.google.inject:guice:3.0:no_aop'
	compile 'com.j256.ormlite:ormlite-android:4.42'
	/*
	 * gradle-android does not handle library projects well so we pull project
	 * dependencies from local maven repository when building.
	 */
	compile 'org.juzidian:org.juzidian.cedict:0.+'
	compile 'org.juzidian:org.juzidian.core:0.+'
	generate project(':org.juzidian.build.data')
	generate 'org.xerial:sqlite-jdbc:3.7.2'
	generate 'com.j256.ormlite:ormlite-jdbc:4.42'
}

task generateResources {
	inputs.file file("$cedictDataPath")
	outputs.file file("$dictionaryDbPath")
	doLast {
		mkdir("$rawResDir")
		javaexec {
			main = 	'org.juzidian.build.data.DictionaryDataBaseCreator'
			classpath = configurations.generate
			args dictionaryDbPath
		}
	}
}

eclipse.classpath.file {
	whenMerged { classpath ->
		classpath.entries.removeAll { it.path.contains('org.juzidian.cedict-') }
		classpath.entries.removeAll { it.path.contains('org.juzidian.core-') }
	}
}

compileJava.dependsOn generateResources
compileJava.dependsOn ':org.juzidian.cedict:install'
compileJava.dependsOn ':org.juzidian.core:install'