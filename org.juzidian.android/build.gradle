apply plugin: 'android'

def rawResDir = "src/main/res/raw"

def dictionaryDbSourceDir = "${project(':org.juzidian.build.data').projectDir}/build"

configurations {
	generate
}

dependencies {
	compile (project(':org.juzidian.core')) {
		/* slf4j-api conflicts with slf4j-android. */
		exclude group: 'org.slf4j', module: 'slf4j-api'
	}
	compile (project(':org.juzidian.pinyin'))
	compile libraries.guice_no_aop
	compile libraries.ormlite_android
	compile libraries.slf4j_android
	compile files("$rawResDir/juzidian_dictionary.db") {
		builtBy 'copyRawDbResource'
	}
}

project.ext.androidTargetPlatform = 'android-16'

android {
	target = "${androidTargetPlatform}"
	defaultConfig {
		versionCode = "${juzidianReleaseSequenceNumber}"
		versionName = "${juzidianVersion}"
		minSdkVersion = 8
		targetSdkVersion = 15
	}
}

task copyRawDbResource(type:Copy) {
	dependsOn ':org.juzidian.build.data:generateDatabase', 'createRawResDir'
	from ("$dictionaryDbSourceDir") {
		include 'juzidian_dictionary.db'
	}
	into "$rawResDir"
}

task createRawResDir << {
	file("$rawResDir").mkdirs()
}

clean.dependsOn cleanCopyRawDbResource

eclipse {
	classpath {
		plusConfigurations += configurations.compile
		file {
			withXml {
				def node = it.asNode()
				node.appendNode('classpathentry', [kind: 'src', path: 'src/main/java'])
				node.appendNode('classpathentry', [kind: 'src', path: 'build/source/debug'])
				node.appendNode('classpathentry', [kind: 'lib', path: "${androidSdkDir}/platforms/${androidTargetPlatform}/android.jar"])
			}
		}
	}
}
